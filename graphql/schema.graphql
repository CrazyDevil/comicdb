type Publisher {
    id: Int
    name: String!
    founded_year: Int
    founded_month: Int
    founded_day: Int
    website_url: String
    twitter_url: String
    address: String
    zip: String
    city: String
    state: String
    country: String
    series: [Series] @hasMany @orderBy(column: "title", direction: ASC)
}

type Series {
    id: Int
    title: String!
    volume: Int!
    description: String
    start_year: Int!
    end_year: Int
    rating: String
    type: String!
    publisher: Publisher! @belongsTo
    comics: [Comic] @hasMany @orderBy(column: "issue_number", direction: ASC)
}

type Comic {
    id: Int
    title: String!
    issue_number: Int!
    description: String
    format: String!
    page_count: Int
    series: Series! @belongsTo
    covers: [Cover] @hasMany @orderBy(column: "identificator", direction: ASC)
}

type Cover {
    id: Int
    identificator: String!
    name: String
    distributor_sku: String
    upc: String
    cover_path: String
    cover_price: Float
    release_date: String
    comic: Comic! @belongsTo
}

type Query {
    publishers: [Publisher] @all
    publisher(id: Int! @eq): Publisher @find
    series: [Series] @all
    series(id: Int! @eq): Series @find
    comics: [Comic] @all @orderBy(column: "issue_number", direction: ASC)
    comic(id: Int! @eq): Comic @find
}
