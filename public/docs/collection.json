{
    "variable": [
        {
            "id": "baseUrl",
            "key": "baseUrl",
            "type": "string",
            "name": "string",
            "value": "http:\/\/localhost"
        }
    ],
    "info": {
        "name": "Laravel",
        "_postman_id": "e1d02c6c-ec16-4e4a-9f80-13e10930273c",
        "description": "",
        "schema": "https:\/\/schema.getpostman.com\/json\/collection\/v2.1.0\/collection.json"
    },
    "item": [
        {
            "name": "Publisher management",
            "description": "",
            "item": [
                {
                    "name": "Fetch a list of all publishers",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/publishers",
                            "query": [
                                {
                                    "key": "sort",
                                    "value": "name",
                                    "description": "The field to sort the list by.",
                                    "disabled": false
                                },
                                {
                                    "key": "filter%5Bname%5D",
                                    "value": "Marvel",
                                    "description": "Filter by publisher name.",
                                    "disabled": false
                                },
                                {
                                    "key": "filter%5Bcountry%5D",
                                    "value": "USA",
                                    "description": "Filter by publisher country.",
                                    "disabled": false
                                },
                                {
                                    "key": "filter%5Bfounded-year%5D",
                                    "value": "1940",
                                    "description": "Filter by publisher founded year.",
                                    "disabled": false
                                },
                                {
                                    "key": "filter%5Bfounded-year-between%5D",
                                    "value": "1940%2C1990",
                                    "description": "Filter by publisher founded year in the given range.",
                                    "disabled": false
                                },
                                {
                                    "key": "page%5Bnumber%5D",
                                    "value": "2",
                                    "description": "The page number (default 1).",
                                    "disabled": false
                                },
                                {
                                    "key": "page%5Bsize%5D",
                                    "value": "10",
                                    "description": "The page size (default 30).",
                                    "disabled": false
                                }
                            ],
                            "raw": "{{baseUrl}}\/api\/publishers?sort=name&filter%5Bname%5D=Marvel&filter%5Bcountry%5D=USA&filter%5Bfounded-year%5D=1940&filter%5Bfounded-year-between%5D=1940%2C1990&page%5Bnumber%5D=2&page%5Bsize%5D=10"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This endpoint will return a list of all publishers. You can sort the list by publisher name or founded year. You\nalso have the ability to filter the list by publisher name, country, founded year of between two years."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Publisher 1\",\n      \"founded-at\": \"1990\",\n      \"website-url\": \"http:\/\/www.publisher1.com\",\n      \"twitter-url\": \"http:\/\/www.twitter.com\/publisher1\",\n      \"address\": \"Address 1\",\n      \"city\": \"City 1\",\n      \"state\": \"State 1\",\n      \"zip\": \"12345\",\n      \"country\": \"DEU\",\n      \"created-at\": \"2020-01-01T00:00:00+00:00\",\n      \"updated-at\": \"2020-01-01T00:00:00+00:00\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Publisher 2\",\n      \"founded-at\": \"1990\",\n      \"website-url\": \"http:\/\/www.publisher2.com\",\n      \"twitter-url\": \"http:\/\/www.twitter.com\/publisher2\",\n      \"address\": \"Address 2\",\n      \"city\": \"City 2\",\n      \"state\": \"State 2\",\n      \"zip\": \"12345\",\n      \"country\": \"DEU\",\n      \"created-at\": \"2020-01-01T00:00:00+00:00\",\n      \"updated-at\": \"2020-01-01T00:00:00+00:00\"\n    },\n  ],\n  \"links\": {\n    \"first\": \"http:\/\/localhost\/api\/publishers?page%5Bnumber%5D=1\",\n    \"last\": \"http:\/\/localhost\/api\/publishers?page%5Bnumber%5D=4\",\n    \"prev\": null,\n    \"next\": \"http:\/\/localhost\/api\/publishers?page%5Bnumber%5D=2\"\n  },\n  \"meta\": {\n     \"current_page\": 1,\n     \"from\": 1,\n     \"last_page\": 4,\n     \"links\": [\n       {\n         \"url\": null,\n         \"label\": \"&laquo; Previous\",\n         \"active\": false\n       },\n       {\n         \"url\": \"http:\/\/localhost\/api\/publishers?sort=name&page%5Bnumber%5D=1\",\n         \"label\": \"1\",\n         \"active\": true\n       },\n       {\n         \"url\": \"http:\/\/localhost\/api\/publishers?sort=name&page%5Bnumber%5D=2\",\n         \"label\": \"2\",\n         \"active\": false\n       },\n       {\n         \"url\": \"http:\/\/localhost\/api\/publishers?sort=name&page%5Bnumber%5D=2\",\n         \"label\": \"Next &raquo;\",\n         \"active\": false\n       }\n     ],\n     \"path\": \"http:\/\/localhost\/api\/publishers\",\n     \"per_page\": 30,\n     \"to\": 30,\n     \"total\": 100\n   }\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Create a new publisher",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/publishers",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/publishers"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"soluta\",\"founded_year\":104,\"founded_month\":4,\"founded_day\":1,\"website_url\":\"mlttstyyvmdvtbzwxfxqhpscwxlriyaydzxhwolqggsynwsvhejkhpjcvnxlvgdsyqfhjbeqvxzbmayvclhdyuphdjirkw\",\"twitter_url\":\"oivletfczkjwnjsevnnyauqfquqcuzuxlpjaxplbxgkxeqxmxgohbvdkbxmtdqosgmkwjdzjyguxoudmhzottauxhjnavmmhkfihhypqfosgctdqgvxuumqnvaoleqkwrr\"}"
                        },
                        "description": "This endpoint will create a new publisher."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Publisher 1\",\n    \"founded-at\": \"1990\",\n    \"website-url\": \"http:\/\/www.publisher1.com\",\n    \"twitter-url\": \"http:\/\/www.twitter.com\/publisher1\",\n    \"address\": \"Address 1\",\n    \"city\": \"City 1\",\n    \"state\": \"State 1\",\n    \"zip\": \"12345\",\n    \"country\": \"DEU\",\n    \"created-at\": \"2020-01-01T00:00:00+00:00\",\n    \"updated-at\": \"2020-01-01T00:00:00+00:00\"\n  }\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"field\": [\n            \"Error message\"\n        ]\n    }\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Fetch a single publisher",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/publishers\/:id",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/publishers\/:id",
                            "variable": [
                                {
                                    "id": "id",
                                    "key": "id",
                                    "value": "17",
                                    "description": "The ID of the publisher."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This endpoint will return a single publisher specified by the id."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Publisher 1\",\n    \"founded-at\": \"1990\",\n    \"website-url\": \"http:\/\/www.publisher1.com\",\n    \"twitter-url\": \"http:\/\/www.twitter.com\/publisher1\",\n    \"address\": \"Address 1\",\n    \"city\": \"City 1\",\n    \"state\": \"State 1\",\n    \"zip\": \"12345\",\n    \"country\": \"DEU\",\n    \"created-at\": \"2020-01-01T00:00:00+00:00\",\n    \"updated-at\": \"2020-01-01T00:00:00+00:00\"\n  }\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Update an existing publisher",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/publishers\/:id",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/publishers\/:id",
                            "variable": [
                                {
                                    "id": "id",
                                    "key": "id",
                                    "value": "12",
                                    "description": "The ID of the publisher."
                                }
                            ]
                        },
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"dd\",\"founded_year\":1705,\"founded_month\":9,\"founded_day\":24,\"website_url\":\"gulpkrzrnwohrjckeqmiyhevcqfmlgobkxfhznzyutwohrromjpiurqtbugpphgaxcfqkmyxqwxpspubnefnlhliupwdghucusvpndtxmzavrnbekfnyikjawirwqosogxrmoejhszyaeyfwvzclrxywbptskdinaetrysartuncwujkajhnvgvcsqppdjwvgmfhnrhfiroezlgnrzaxncxbujimfucmbqhzcgkms\",\"twitter_url\":\"qhwfpynbnkkiea\"}"
                        },
                        "description": "This endpoint will update an existing publisher."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Publisher 1\",\n    \"founded-at\": \"1990\",\n    \"website-url\": \"http:\/\/www.publisher1.com\",\n    \"twitter-url\": \"http:\/\/www.twitter.com\/publisher1\",\n    \"address\": \"Address 1\",\n    \"city\": \"City 1\",\n    \"state\": \"State 1\",\n    \"zip\": \"12345\",\n    \"country\": \"DEU\",\n    \"created-at\": \"2020-01-01T00:00:00+00:00\",\n    \"updated-at\": \"2020-01-01T00:00:00+00:00\"\n  }\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"field\": [\n            \"Error message\"\n        ]\n    }\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Delete an existing publisher",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/publishers\/:id",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/publishers\/:id",
                            "variable": [
                                {
                                    "id": "id",
                                    "key": "id",
                                    "value": "16",
                                    "description": "The ID of the publisher."
                                }
                            ]
                        },
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "This endpoint will delete an existing publisher."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Publisher 1\",\n    \"founded-at\": \"1990\",\n    \"website-url\": \"http:\/\/www.publisher1.com\",\n    \"twitter-url\": \"http:\/\/www.twitter.com\/publisher1\",\n    \"address\": \"Address 1\",\n    \"city\": \"City 1\",\n    \"state\": \"State 1\",\n    \"zip\": \"12345\",\n    \"country\": \"DEU\",\n    \"created-at\": \"2020-01-01T00:00:00+00:00\",\n    \"updated-at\": \"2020-01-01T00:00:00+00:00\"\n  }\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "{\n \"message\": \"Resource not found.\"\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"The given data was invalid.\",\n  \"errors\": {\n  \"name\": [\n     \"Error message\"\n  ]\n}",
                            "name": ""
                        }
                    ]
                }
            ]
        },
        {
            "name": "User management",
            "description": "",
            "item": [
                {
                    "name": "Register a new user",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "api\/register",
                            "query": [],
                            "raw": "{{baseUrl}}\/api\/register"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"name\":\"ccbtylfdmwaznloncencoxjxxhrxvhyknyvbmkiaruggrzgieoavqvqumuifihzmyilivqpickodhrnuywhdvucfoshwchheuwdawfmtxmycumzjjmvvogatmaexzaadcadpecqstwsheshswzrvuubllbamzkhnnoanjcgmfknertqkuukijdcnleqypacwqakvnkthhiqeokjftuzavpzftnamqxuazxmngagsfanlbtawylmvie\",\"email\":\"amcdermott@example.org\",\"password\":\"yfzngglkclqqndfsoztyauzhowwtdrdhholjigiclfvqfscvyvrdxsnrvroqiugrkbglgtntmmwspdlupoklptdcxnmlfvofpjvyexrnqztctfjptejyrugniekqtdkslglqgxdktmhnqhhbnkqljdqm\"}"
                        },
                        "description": "This endpoint allows you to register a new user. The email address must be unique or you will get a 422 with an\nerror message that the email address has already been taken.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n    \"access_token\": \"token\",\n    \"token_type\": \"Bearer\",\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 422,
                            "body": "{\n  \"message\": \"The given data was invalid.\",\n  \"errors\": {\n  \"name\": [\n    \"Error message.\"\n  ]\n}",
                            "name": ""
                        }
                    ]
                }
            ]
        }
    ],
    "auth": {
        "type": "bearer"
    }
}